======Information =======================================================================================
The foucs of this task is on Design Patterns.
In 1994 a book was created by four authors, collectively known as the Gang of Four (GoF), called:
 Design Patterns - Elements of Reusable Object-Oriented Software

Design Patterns have two main usages in software development:

1. Design patterns provide a standard terminology and are specific to particular scenario. 
2. Design patterns been tested and updated. They are the best solutions to certain problems faced during software development.
 Learning these patterns helps unexperienced developers to learn software design in an easy and faster way.

The design patterns we go through here are:
1.Observer
2.Decorator

 Obserer is a behaviorial design pattern. 
 Observer design pattern works with 3 classes which are Subject, Observer and Client.
 Subjects consists of list of observers and methods to attach and detach observers to a client object. 
 It also contains a method to notify all the observers of any change. 
 So: Observers watch a subject; waiting for any changes from the subject.

 Decorator is a structural design pattern.
 It provides the facility to add additional responsibilities to an existing object without altering its structure.
 It is similar to Subclassing (Parent, Child Inheritance). Except that when you have many child classes, 
 you may find you want to make another that is a mix of two+ already existing child classes.
 Rather than make another new child class, decorator is used so you avoid making any unnecesarry classes and combine the properties
 of the classes you want.
 E.g. Food. Food Decorator can have classes of 'Vegetarian', 'Indian', 'Salty', 'Chinese'.
 You don't need to make a subclass of Vegetarian Chinese food now, as you can create an object that can be decorated with vegetarian, and chinese.

====================================================================================================
Keyword Task:
Match Keywords with the definition. Copy and paste the definition or keywords to the other one.

ex) Object-Oriented Programming
ex)Object-Oriented Programming (pasted from above): creating objects that contain both data and methods, to have reusability for easier maintenance.

1. Design Pattern
2. Decorator Patten
3. Observer Pattern
4. Methods
5. Inheritance
6. Polymorphism


a. A Structural design pattern. Provides the facility to add additional responsibilities to an existing object without altering its structure.
b. Using inherited methods to perform different tasks. This allows us to perform a single action in different ways.
c. A block of code which only runs when it is called. Data known as parameters can be passed. Used to perform a certain action. Also known as functions.
d. The concept of Parent and Child. Where the Child is able to do the methods the parent can, as well as inheriting it's attributes.
e. A behaviorial design pattern. A One-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically.
f. Represents the best practices used by experienced object-oriented software developers. They are solutions to general problems that software developers faced during software development.

===================================================================================






answers: 
1f
2a
3e
4c
5d
6b